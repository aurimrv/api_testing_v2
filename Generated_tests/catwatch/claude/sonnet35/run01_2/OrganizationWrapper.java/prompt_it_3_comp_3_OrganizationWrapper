You are a highly skilled test engineer specializing in debugging and resolving compilation errors and test failures in Java-based projects. Your expertise includes Java 8, JUnit 4, and REST Assured, allowing you to diagnose issues efficiently and provide precise, actionable fixes.

Do fix the compilation errors delimited by ##### given the code below delimited by *****.

The response must contain only Java code in JUnit 4 format.

#####
[[1;31mERROR[m] COMPILATION ERROR : 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_OrganizationWrapperTest.java:[44,13] cannot find symbol
  symbol:   class OrganizationWrapper
  location: class org.zalando.catwatch.backend.sonnet35_run01_OrganizationWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_OrganizationWrapperTest.java:[48,23] cannot find symbol
  symbol:   class OrganizationWrapper
  location: class org.zalando.catwatch.backend.sonnet35_run01_OrganizationWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_OrganizationWrapperTest.java:[56,9] cannot find symbol
  symbol:   class OrganizationWrapper
  location: class org.zalando.catwatch.backend.sonnet35_run01_OrganizationWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_OrganizationWrapperTest.java:[56,48] cannot find symbol
  symbol:   class OrganizationWrapper
  location: class org.zalando.catwatch.backend.sonnet35_run01_OrganizationWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_OrganizationWrapperTest.java:[107,14] cannot find symbol
  symbol:   class RepositoryWrapper
  location: class org.zalando.catwatch.backend.sonnet35_run01_OrganizationWrapperTest
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-compiler-plugin:3.8.0:testCompile[m [1m(default-testCompile)[m on project [36mcatwatch-backend[m: [1;31mCompilation failure[m: Compilation failure: 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_OrganizationWrapperTest.java:[44,13] cannot find symbol
[[1;31mERROR[m]   symbol:   class OrganizationWrapper
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_OrganizationWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_OrganizationWrapperTest.java:[48,23] cannot find symbol
[[1;31mERROR[m]   symbol:   class OrganizationWrapper
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_OrganizationWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_OrganizationWrapperTest.java:[56,9] cannot find symbol
[[1;31mERROR[m]   symbol:   class OrganizationWrapper
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_OrganizationWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_OrganizationWrapperTest.java:[56,48] cannot find symbol
[[1;31mERROR[m]   symbol:   class OrganizationWrapper
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_OrganizationWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_OrganizationWrapperTest.java:[107,14] cannot find symbol
[[1;31mERROR[m]   symbol:   class RepositoryWrapper
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_OrganizationWrapperTest
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

#####
*****
package org.zalando.catwatch.backend;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.kohsuke.github.*;

import java.io.IOException;
import java.util.Collections;
import java.util.List;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

@RunWith(MockitoJUnitRunner.class)
public class sonnet35_run01_OrganizationWrapperTest {

    @Mock
    private GHOrganization mockOrg;

    @Mock
    private GHTeam mockTeam;

    @Mock
    private GHUser mockUser;

    @Mock
    private GHRepository mockRepo;

    @Mock
    private GHRepository.Contributor mockContributor;

    @Mock
    private PagedIterable<GHTeam> mockTeamList;

    @Mock
    private PagedIterable<GHUser> mockUserList;

    @Mock
    private PagedIterable<GHRepository> mockRepoList;

    private OrganizationWrapper wrapper;

    @Before
    public void setUp() {
        wrapper = new OrganizationWrapper(mockOrg);
    }

    @Test
    public void testConstructor() throws Exception {
        when(mockOrg.listRepositories()).thenThrow(new IOException("Test exception"));
        when(mockOrg.getLogin()).thenReturn("testOrg");

        OrganizationWrapper localWrapper = new OrganizationWrapper(mockOrg);

        assertNotNull(localWrapper);
        assertTrue(localWrapper.listRepositories().isEmpty());
    }

    @Test
    public void testListTeams() throws Exception {
        when(mockOrg.listTeams()).thenReturn(mockTeamList);
        when(mockTeamList.asList()).thenReturn(Collections.singletonList(mockTeam));

        List<GHTeam> teams = wrapper.listTeams();
        assertFalse(teams.isEmpty());
        assertEquals(1, teams.size());
    }

    @Test
    public void testListTeamsException() throws Exception {
        when(mockOrg.listTeams()).thenThrow(new IOException("Test exception"));
        when(mockOrg.getLogin()).thenReturn("testOrg");

        List<GHTeam> teams = wrapper.listTeams();
        assertTrue(teams.isEmpty());
    }

    @Test
    public void testListMembers() throws Exception {
        when(mockOrg.listMembers()).thenReturn(mockUserList);
        when(mockUserList.asList()).thenReturn(Collections.singletonList(mockUser));

        List<GHUser> members = wrapper.listMembers();
        assertFalse(members.isEmpty());
        assertEquals(1, members.size());
    }

    @Test
    public void testListMembersException() throws Exception {
        when(mockOrg.listMembers()).thenThrow(new IOException("Test exception"));
        when(mockOrg.getLogin()).thenReturn("testOrg");

        List<GHUser> members = wrapper.listMembers();
        assertTrue(members.isEmpty());
    }

    @Test
    public void testListRepositories() throws Exception {
        when(mockOrg.listRepositories()).thenReturn(mockRepoList);
        when(mockRepoList.asList()).thenReturn(Collections.singletonList(mockRepo));
        when(mockRepo.isPrivate()).thenReturn(false);
        when(mockRepo.isFork()).thenReturn(false);

        List<RepositoryWrapper> repos = wrapper.listRepositories();
        assertFalse(repos.isEmpty());
        assertEquals(1, repos.size());
    }

    @Test
    public void testGetId() throws Exception {
        when(mockOrg.getId()).thenReturn(123);
        assertEquals(123, wrapper.getId());
    }

    @Test
    public void testGetPublicRepoCount() throws Exception {
        when(mockOrg.getPublicRepoCount()).thenReturn(5);
        assertEquals(5, wrapper.getPublicRepoCount());
    }

    @Test
    public void testGetPublicRepoCountException() throws Exception {
        when(mockOrg.getPublicRepoCount()).thenThrow(new IOException("Test exception"));
        when(mockOrg.getLogin()).thenReturn("testOrg");
        assertEquals(0, wrapper.getPublicRepoCount());
    }

    @Test
    public void testGetLogin() throws Exception {
        when(mockOrg.getLogin()).thenReturn("testOrg");
        assertEquals("testOrg", wrapper.getLogin());
    }

    @Test
    public void testContributorIsMember() throws Exception {
        when(mockOrg.listMembers()).thenReturn(mockUserList);
        when(mockUserList.asList()).thenReturn(Collections.singletonList(mockUser));
        assertFalse(wrapper.contributorIsMember(mockContributor));
    }
}

*****
