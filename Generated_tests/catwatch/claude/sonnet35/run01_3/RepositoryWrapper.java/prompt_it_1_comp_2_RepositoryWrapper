You are a highly skilled test engineer specializing in debugging and resolving compilation errors and test failures in Java-based projects. Your expertise includes Java 8, JUnit 4, and REST Assured, allowing you to diagnose issues efficiently and provide precise, actionable fixes.

Do fix the compilation errors delimited by ##### given the code below delimited by *****.

The response must contain only Java code in JUnit 4 format.

#####
[[1;31mERROR[m] COMPILATION ERROR : 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[71,29] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[132,46] cannot find symbol
  symbol:   method of(java.lang.String,long,java.lang.String,long)
  location: interface java.util.Map
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[153,14] cannot find symbol
  symbol:   class GHCommit
  location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[153,95] cannot find symbol
  symbol:   class GHCommit
  location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[153,65] cannot find symbol
  symbol:   class GHCommit
  location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[172,50] no suitable method found for thenReturn(org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest.PagedIterableStub<org.kohsuke.github.GHRepository.Contributor>)
    method org.mockito.stubbing.OngoingStubbing.thenReturn(org.kohsuke.github.PagedIterable<org.kohsuke.github.GHRepository.Contributor>) is not applicable
      (argument mismatch; cannot infer type arguments for org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest.PagedIterableStub<>
          reason: no instance(s) of type variable(s) T exist so that org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest.PagedIterableStub<T> conforms to org.kohsuke.github.PagedIterable<org.kohsuke.github.GHRepository.Contributor>)
    method org.mockito.stubbing.OngoingStubbing.thenReturn(org.kohsuke.github.PagedIterable<org.kohsuke.github.GHRepository.Contributor>,org.kohsuke.github.PagedIterable<org.kohsuke.github.GHRepository.Contributor>...) is not applicable
      (argument mismatch; cannot infer type arguments for org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest.PagedIterableStub<>
          reason: no instance(s) of type variable(s) T exist so that org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest.PagedIterableStub<T> conforms to org.kohsuke.github.PagedIterable<org.kohsuke.github.GHRepository.Contributor>)
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[186,14] cannot find symbol
  symbol:   class GHTag
  location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[186,86] cannot find symbol
  symbol:   class GHTag
  location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[186,59] cannot find symbol
  symbol:   class GHTag
  location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-compiler-plugin:3.8.0:testCompile[m [1m(default-testCompile)[m on project [36mcatwatch-backend[m: [1;31mCompilation failure[m: Compilation failure: 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[71,29] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[132,46] cannot find symbol
[[1;31mERROR[m]   symbol:   method of(java.lang.String,long,java.lang.String,long)
[[1;31mERROR[m]   location: interface java.util.Map
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[153,14] cannot find symbol
[[1;31mERROR[m]   symbol:   class GHCommit
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[153,95] cannot find symbol
[[1;31mERROR[m]   symbol:   class GHCommit
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[153,65] cannot find symbol
[[1;31mERROR[m]   symbol:   class GHCommit
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[172,50] no suitable method found for thenReturn(org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest.PagedIterableStub<org.kohsuke.github.GHRepository.Contributor>)
[[1;31mERROR[m]     method org.mockito.stubbing.OngoingStubbing.thenReturn(org.kohsuke.github.PagedIterable<org.kohsuke.github.GHRepository.Contributor>) is not applicable
[[1;31mERROR[m]       (argument mismatch; cannot infer type arguments for org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest.PagedIterableStub<>
[[1;31mERROR[m]           reason: no instance(s) of type variable(s) T exist so that org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest.PagedIterableStub<T> conforms to org.kohsuke.github.PagedIterable<org.kohsuke.github.GHRepository.Contributor>)
[[1;31mERROR[m]     method org.mockito.stubbing.OngoingStubbing.thenReturn(org.kohsuke.github.PagedIterable<org.kohsuke.github.GHRepository.Contributor>,org.kohsuke.github.PagedIterable<org.kohsuke.github.GHRepository.Contributor>...) is not applicable
[[1;31mERROR[m]       (argument mismatch; cannot infer type arguments for org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest.PagedIterableStub<>
[[1;31mERROR[m]           reason: no instance(s) of type variable(s) T exist so that org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest.PagedIterableStub<T> conforms to org.kohsuke.github.PagedIterable<org.kohsuke.github.GHRepository.Contributor>)
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[186,14] cannot find symbol
[[1;31mERROR[m]   symbol:   class GHTag
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[186,86] cannot find symbol
[[1;31mERROR[m]   symbol:   class GHTag
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/sonnet35_run01_RepositoryWrapperTest.java:[186,59] cannot find symbol
[[1;31mERROR[m]   symbol:   class GHTag
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.sonnet35_run01_RepositoryWrapperTest
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

#####
*****
package org.zalando.catwatch.backend;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Map;
import java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import org.evomaster.client.java.controller.SutHandler;
import io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import io.restassured.config.JsonConfig;
import io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import org.evomaster.client.java.controller.expect.ExpectationHandler;
import io.restassured.path.json.JsonPath;
import java.util.Arrays;
import org.kohsuke.github.GHRepository;
import org.kohsuke.github.GHOrganization;
import org.zalando.catwatch.backend.github.RepositoryWrapper;
import java.util.Date;
import java.io.IOException;
import java.net.URL;
import org.mockito.Mockito;

public class sonnet35_run01_RepositoryWrapperTest {

    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;

    private GHRepository mockRepo;
    private GHOrganization mockOrg;
    private RepositoryWrapper repositoryWrapper;

    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }

    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR"));
        controller.resetStateOfSUT();
        mockRepo = Mockito.mock(GHRepository.class);
        mockOrg = Mockito.mock(GHOrganization.class);
        repositoryWrapper = new RepositoryWrapper(mockRepo, mockOrg);
    }

    @Test
    public void testGetId() {
        Mockito.when(mockRepo.getId()).thenReturn(123);
        assertEquals(123, repositoryWrapper.getId());
    }

    @Test
    public void testGetName() {
        Mockito.when(mockRepo.getName()).thenReturn("testRepo");
        assertEquals("testRepo", repositoryWrapper.getName());
    }

    @Test
    public void testGetUrl() throws Exception {
        URL mockUrl = new URL("https://github.com/testorg/testrepo");
        Mockito.when(mockRepo.getHtmlUrl()).thenReturn(mockUrl);
        assertEquals(mockUrl, repositoryWrapper.getUrl());
    }

    @Test
    public void testGetDescription() {
        Mockito.when(mockRepo.getDescription()).thenReturn("Test description");
        assertEquals("Test description", repositoryWrapper.getDescription());
    }

    @Test
    public void testGetStarsCount() {
        Mockito.when(mockRepo.getWatchers()).thenReturn(100);
        assertEquals(100, repositoryWrapper.getStarsCount());
    }

    @Test
    public void testGetForksCount() {
        Mockito.when(mockRepo.getForks()).thenReturn(50);
        assertEquals(50, repositoryWrapper.getForksCount());
    }

    @Test
    public void testGetSize() {
        Mockito.when(mockRepo.getSize()).thenReturn(1000);
        assertEquals(1000, repositoryWrapper.getSize());
    }

    @Test
    public void testGetLastPushed() {
        Date mockDate = new Date();
        Mockito.when(mockRepo.getPushedAt()).thenReturn(mockDate);
        assertEquals(mockDate, repositoryWrapper.getLastPushed());
    }

    @Test
    public void testGetPrimaryLanguage() {
        Mockito.when(mockRepo.getLanguage()).thenReturn("Java");
        assertEquals("Java", repositoryWrapper.getPrimaryLanguage());
    }

    @Test
    public void testListLanguages() throws IOException {
        Map<String, Long> mockLanguages = Map.of("Java", 1000L, "Python", 500L);
        Mockito.when(mockRepo.listLanguages()).thenReturn(mockLanguages);
        assertEquals(mockLanguages, repositoryWrapper.listLanguages());
    }

    @Test
    public void testListLanguagesWithException() throws IOException {
        Mockito.when(mockRepo.listLanguages()).thenThrow(new IOException("Test exception"));
        Mockito.when(mockRepo.getName()).thenReturn("testRepo");
        Mockito.when(mockOrg.getLogin()).thenReturn("testOrg");
        assertTrue(repositoryWrapper.listLanguages().isEmpty());
    }

    @Test
    public void testGetOrganizationName() {
        Mockito.when(mockOrg.getLogin()).thenReturn("testOrg");
        assertEquals("testOrg", repositoryWrapper.getOrganizationName());
    }

    @Test
    public void testListCommits() throws IOException {
        List<GHCommit> mockCommits = Arrays.asList(Mockito.mock(GHCommit.class), Mockito.mock(GHCommit.class));
        Mockito.when(mockRepo.listCommits()).thenReturn(new PagedIterableStub<>(mockCommits));
        assertEquals(mockCommits, repositoryWrapper.listCommits());
    }

    @Test
    public void testListCommitsWithException() throws IOException {
        Mockito.when(mockRepo.listCommits()).thenThrow(new Error("Test error"));
        Mockito.when(mockRepo.getName()).thenReturn("testRepo");
        Mockito.when(mockOrg.getLogin()).thenReturn("testOrg");
        assertTrue(repositoryWrapper.listCommits().isEmpty());
    }

    @Test
    public void testListContributors() throws IOException {
        List<GHRepository.Contributor> mockContributors = Arrays.asList(
            Mockito.mock(GHRepository.Contributor.class),
            Mockito.mock(GHRepository.Contributor.class)
        );
        Mockito.when(mockRepo.listContributors()).thenReturn(new PagedIterableStub<>(mockContributors));
        assertEquals(mockContributors, repositoryWrapper.listContributors());
    }

    @Test
    public void testListContributorsWithException() throws IOException {
        Mockito.when(mockRepo.listContributors()).thenThrow(new IOException("Test exception"));
        Mockito.when(mockRepo.getName()).thenReturn("testRepo");
        Mockito.when(mockOrg.getLogin()).thenReturn("testOrg");
        assertTrue(repositoryWrapper.listContributors().isEmpty());
    }

    @Test
    public void testListTags() throws IOException {
        List<GHTag> mockTags = Arrays.asList(Mockito.mock(GHTag.class), Mockito.mock(GHTag.class));
        Mockito.when(mockRepo.listTags()).thenReturn(new PagedIterableStub<>(mockTags));
        assertEquals(mockTags, repositoryWrapper.listTags());
    }

    @Test
    public void testListTagsWithException() throws IOException {
        Mockito.when(mockRepo.listTags()).thenThrow(new IOException("Test exception"));
        Mockito.when(mockRepo.getName()).thenReturn("testRepo");
        Mockito.when(mockOrg.getLogin()).thenReturn("testOrg");
        assertTrue(repositoryWrapper.listTags().isEmpty());
    }

    // Helper class to mock PagedIterable
    private static class PagedIterableStub<T> implements Iterable<T> {
        private final List<T> list;

        public PagedIterableStub(List<T> list) {
            this.list = list;
        }

        @Override
        public java.util.Iterator<T> iterator() {
            return list.iterator();
        }

        public List<T> asList() {
            return list;
        }
    }
}

*****
