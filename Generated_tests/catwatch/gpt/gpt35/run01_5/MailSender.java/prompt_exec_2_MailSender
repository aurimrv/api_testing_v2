You are a highly skilled test engineer specializing in debugging and resolving compilation errors and test failures in Java-based projects. Your expertise includes Java 8, JUnit 4, and REST Assured, allowing you to diagnose issues efficiently and provide precise, actionable fixes.

Given the test set below delimited by *****, fix the source lines indicated in the error messages delimited by #####, replacing only the expected by the actual values.

Do keep package, headers and accessories methods unchanged.

Do export all other corrected tests unchanged.

The response must contain only Java code in JUnit 4 format.

#####
Line: 60
expected:<to@test.com> but was:<null>
----------------------------------------

#####
*****

import org.junit.Test;
import static org.junit.Assert.*;

class MailSender {
    public MailSender(Object o, String to, String from) {
        // implementation
    }

    public boolean send(Throwable e) {
        // implementation
        return true;
    }

    public SimpleMailMessage createMessageFor(Throwable e) {
        // implementation
        return new SimpleMailMessage();
    }
}

class SimpleMailMessage {
    private String to;
    private String from;
    private String subject;
    private String text;

    public String getTo() {
        return to;
    }

    public String getFrom() {
        return from;
    }

    public String getSubject() {
        return subject;
    }

    public String getText() {
        return text;
    }
}

public class gpt35_run01_MailSenderTest {

    @Test
    public void testSend() {
        // Test for successful email sending
        Throwable e = new Throwable("Test Exception Message");
        assertTrue(new MailSender(null, "to@test.com", "from@test.com").send(e));
    }

    @Test
    public void testCreateMessageFor() {
        // Test creating email message for the given exception
        String destinationAddress = "to@test.com";
        String sourceAddress = "from@test.com";
        Throwable e = new Throwable("Test Exception Message");
        SimpleMailMessage mailMessage = new MailSender(null, destinationAddress, sourceAddress).createMessageFor(e);
        assertEquals(destinationAddress, mailMessage.getTo());
        assertEquals(sourceAddress, mailMessage.getFrom());
        assertEquals("GitHub crawler failed to fetch data", mailMessage.getSubject());
        assertTrue(mailMessage.getText().contains("Test Exception Message"));
    }
}

*****
