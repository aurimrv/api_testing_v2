You are a highly skilled test engineer specializing in debugging and resolving compilation errors and test failures in Java-based projects. Your expertise includes Java 8, JUnit 4, and REST Assured, allowing you to diagnose issues efficiently and provide precise, actionable fixes.

Do fix the compilation errors delimited by ##### given the code below delimited by *****.

The response must contain only Java code in JUnit 4 format.

#####
[[1;31mERROR[m] COMPILATION ERROR : 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[176,22] cannot find symbol
  symbol:   class IOException
  location: class org.zalando.catwatch.backend.gpt4o_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[70,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[73,80] cannot find symbol
  symbol:   method of(java.lang.String,long,java.lang.String,long)
  location: interface java.util.Map
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[90,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[101,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[121,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[141,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[161,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[180,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-compiler-plugin:3.8.0:testCompile[m [1m(default-testCompile)[m on project [36mcatwatch-backend[m: [1;31mCompilation failure[m: Compilation failure: 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[176,22] cannot find symbol
[[1;31mERROR[m]   symbol:   class IOException
[[1;31mERROR[m]   location: class org.zalando.catwatch.backend.gpt4o_run01_RepositoryWrapperTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[70,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[73,80] cannot find symbol
[[1;31mERROR[m]   symbol:   method of(java.lang.String,long,java.lang.String,long)
[[1;31mERROR[m]   location: interface java.util.Map
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[90,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[101,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[121,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[141,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[161,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_RepositoryWrapperTest.java:[180,47] RepositoryWrapper(org.kohsuke.github.GHRepository,org.kohsuke.github.GHOrganization) is not public in org.zalando.catwatch.backend.github.RepositoryWrapper; cannot be accessed from outside package
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

#####
*****

package org.zalando.catwatch.backend;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Map;
import java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import org.evomaster.client.java.controller.SutHandler;
import io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import io.restassured.config.JsonConfig;
import io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import org.evomaster.client.java.controller.expect.ExpectationHandler;
import io.restassured.path.json.JsonPath;
import java.util.Arrays;
import org.kohsuke.github.GHRepository;
import org.kohsuke.github.GHOrganization;
import org.kohsuke.github.GHCommit;
import org.kohsuke.github.GHTag;
import org.zalando.catwatch.backend.github.RepositoryWrapper;

public class gpt4o_run01_RepositoryWrapperTest {

    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;

    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }

    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR"));
        controller.resetStateOfSUT();
    }

    @Test
    public void testListLanguages() throws Exception {
        GHRepository repositoryMock = org.mockito.Mockito.mock(GHRepository.class);
        GHOrganization organizationMock = org.mockito.Mockito.mock(GHOrganization.class);
        RepositoryWrapper repositoryWrapper = new RepositoryWrapper(repositoryMock, organizationMock);

        // Testing successful listLanguages
        org.mockito.Mockito.when(repositoryMock.listLanguages()).thenReturn(Map.of("Java", 100L, "Python", 200L));
        Map<String, Long> result = repositoryWrapper.listLanguages();
        assertNotNull(result);
        assertEquals(2, result.size());
        assertEquals(Long.valueOf(100), result.get("Java"));

        // Testing IOException in listLanguages
        org.mockito.Mockito.when(repositoryMock.listLanguages()).thenThrow(new java.io.IOException("Test Exception"));
        result = repositoryWrapper.listLanguages();
        assertNotNull(result);
        assertTrue(result.isEmpty());
    }

    @Test
    public void testGetOrganizationName() {
        GHRepository repositoryMock = org.mockito.Mockito.mock(GHRepository.class);
        GHOrganization organizationMock = org.mockito.Mockito.mock(GHOrganization.class);
        RepositoryWrapper repositoryWrapper = new RepositoryWrapper(repositoryMock, organizationMock);

        org.mockito.Mockito.when(organizationMock.getLogin()).thenReturn("testOrg");
        String orgName = repositoryWrapper.getOrganizationName();
        assertEquals("testOrg", orgName);
    }

    @Test
    public void testListCommits() throws Exception {
        GHRepository repositoryMock = org.mockito.Mockito.mock(GHRepository.class);
        GHOrganization organizationMock = org.mockito.Mockito.mock(GHOrganization.class);
        RepositoryWrapper repositoryWrapper = new RepositoryWrapper(repositoryMock, organizationMock);

        // Testing successful listCommits
        List<GHCommit> mockCommits = Arrays.asList(org.mockito.Mockito.mock(GHCommit.class));
        org.mockito.Mockito.when(repositoryMock.listCommits().asList()).thenReturn(mockCommits);
        List<GHCommit> commits = repositoryWrapper.listCommits();
        assertNotNull(commits);
        assertEquals(1, commits.size());

        // Testing Error in listCommits
        org.mockito.Mockito.when(repositoryMock.listCommits().asList()).thenThrow(new java.lang.Error("No commits found"));
        commits = repositoryWrapper.listCommits();
        assertNotNull(commits);
        assertTrue(commits.isEmpty());
    }

    @Test
    public void testListContributors() throws Exception {
        GHRepository repositoryMock = org.mockito.Mockito.mock(GHRepository.class);
        GHOrganization organizationMock = org.mockito.Mockito.mock(GHOrganization.class);
        RepositoryWrapper repositoryWrapper = new RepositoryWrapper(repositoryMock, organizationMock);

        // Testing successful listContributors
        List<GHRepository.Contributor> mockContributors = Arrays.asList(org.mockito.Mockito.mock(GHRepository.Contributor.class));
        org.mockito.Mockito.when(repositoryMock.listContributors().asList()).thenReturn(mockContributors);
        List<GHRepository.Contributor> contributors = repositoryWrapper.listContributors();
        assertNotNull(contributors);
        assertEquals(1, contributors.size());

        // Testing Throwable in listContributors
        org.mockito.Mockito.when(repositoryMock.listContributors().asList()).thenThrow(new Throwable("No contributors found"));
        contributors = repositoryWrapper.listContributors();
        assertNotNull(contributors);
        assertTrue(contributors.isEmpty());
    }

    @Test
    public void testListTags() throws Exception {
        GHRepository repositoryMock = org.mockito.Mockito.mock(GHRepository.class);
        GHOrganization organizationMock = org.mockito.Mockito.mock(GHOrganization.class);
        RepositoryWrapper repositoryWrapper = new RepositoryWrapper(repositoryMock, organizationMock);

        // Testing successful listTags
        List<GHTag> mockTags = Arrays.asList(org.mockito.Mockito.mock(GHTag.class));
        org.mockito.Mockito.when(repositoryMock.listTags().asList()).thenReturn(mockTags);
        List<GHTag> tags = repositoryWrapper.listTags();
        assertNotNull(tags);
        assertEquals(1, tags.size());

        // Testing Throwable in listTags
        org.mockito.Mockito.when(repositoryMock.listTags().asList()).thenThrow(new Throwable("No tags found"));
        tags = repositoryWrapper.listTags();
        assertNotNull(tags);
        assertTrue(tags.isEmpty());
    }

    @Test
    public void testGetFileContent() throws Exception {
        GHRepository repositoryMock = org.mockito.Mockito.mock(GHRepository.class);
        GHOrganization organizationMock = org.mockito.Mockito.mock(GHOrganization.class);
        RepositoryWrapper repositoryWrapper = new RepositoryWrapper(repositoryMock, organizationMock);

        // Testing successful getFileContent
        org.kohsuke.github.GHContent mockContent = org.mockito.Mockito.mock(org.kohsuke.github.GHContent.class);
        org.mockito.Mockito.when(repositoryMock.getFileContent("testPath")).thenReturn(mockContent);
        org.mockito.Mockito.when(mockContent.read()).thenReturn(new java.io.ByteArrayInputStream("fileContent".getBytes()));

        try (java.io.InputStream content = repositoryWrapper.getFileContent("testPath")) {
            assertNotNull(content);
            java.util.Scanner scanner = new java.util.Scanner(content, "UTF-8").useDelimiter("\\A");
            assertTrue(scanner.hasNext());
            assertEquals("fileContent", scanner.next());
        }
    }

    @Test(expected = IOException.class)
    public void testGetFileContentException() throws Exception {
        GHRepository repositoryMock = org.mockito.Mockito.mock(GHRepository.class);
        GHOrganization organizationMock = org.mockito.Mockito.mock(GHOrganization.class);
        RepositoryWrapper repositoryWrapper = new RepositoryWrapper(repositoryMock, organizationMock);

        org.mockito.Mockito.when(repositoryMock.getFileContent("invalidPath")).thenThrow(new java.io.IOException("File not found"));
        repositoryWrapper.getFileContent("invalidPath");
    }
}

*****
