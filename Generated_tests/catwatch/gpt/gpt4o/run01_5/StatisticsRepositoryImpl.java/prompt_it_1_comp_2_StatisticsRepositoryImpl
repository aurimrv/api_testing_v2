You are a highly skilled test engineer specializing in debugging and resolving compilation errors and test failures in Java-based projects. Your expertise includes Java 8, JUnit 4, and REST Assured, allowing you to diagnose issues efficiently and provide precise, actionable fixes.

Do fix the compilation errors delimited by ##### given the code below delimited by *****.

The response must contain only Java code in JUnit 4 format.

#####
[[1;31mERROR[m] COMPILATION ERROR : 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_StatisticsRepositoryImplTest.java:[88,17] cannot find symbol
  symbol:   method columns(java.lang.String,java.lang.String,java.lang.String)
  location: interface org.evomaster.client.java.sql.dsl.StatementDsl
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_StatisticsRepositoryImplTest.java:[125,17] cannot find symbol
  symbol:   method columns(java.lang.String,java.lang.String,java.lang.String)
  location: interface org.evomaster.client.java.sql.dsl.StatementDsl
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-compiler-plugin:3.8.0:testCompile[m [1m(default-testCompile)[m on project [36mcatwatch-backend[m: [1;31mCompilation failure[m: Compilation failure: 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_StatisticsRepositoryImplTest.java:[88,17] cannot find symbol
[[1;31mERROR[m]   symbol:   method columns(java.lang.String,java.lang.String,java.lang.String)
[[1;31mERROR[m]   location: interface org.evomaster.client.java.sql.dsl.StatementDsl
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/src/test/java/org/zalando/catwatch/backend/gpt4o_run01_StatisticsRepositoryImplTest.java:[125,17] cannot find symbol
[[1;31mERROR[m]   symbol:   method columns(java.lang.String,java.lang.String,java.lang.String)
[[1;31mERROR[m]   location: interface org.evomaster.client.java.sql.dsl.StatementDsl
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

#####
*****

package org.zalando.catwatch.backend;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Map;
import java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import org.evomaster.client.java.controller.SutHandler;
import io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import io.restassured.config.JsonConfig;
import io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import org.evomaster.client.java.controller.expect.ExpectationHandler;
import io.restassured.path.json.JsonPath;
import java.util.Arrays;
import java.util.Date;
import java.text.SimpleDateFormat;

public class gpt4o_run01_StatisticsRepositoryImplTest {

    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;

    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }

    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR"));
        controller.resetStateOfSUT();
    }

    @Test
    public void testInitConstructor() {
        // Explicitly instantiate the class to exercise the constructor
        org.zalando.catwatch.backend.repo.StatisticsRepositoryImpl repository = new org.zalando.catwatch.backend.repo.StatisticsRepositoryImpl();
        assertNotNull(repository);
    }

    @Test
    public void testGetLatestSnapshotDateBefore_NoResults() {
        ValidatableResponse response = given()
            .queryParam("organization", "TestOrg")
            .queryParam("snapshot", "2023-01-01")
        .when()
            .get(baseUrlOfSut + "/statistics")
        .then()
            .statusCode(200)
            .body("size()", equalTo(0)); // No statistics expected for this input
    }

    @Test
    public void testGetLatestSnapshotDateBefore_WithResult() throws Exception {
        // Insert data into the database
        InsertionResultsDto result = controller.insertIntoDatabase(
            sql()
                .insertInto("STATISTICS")
                .columns("id", "organization_name", "snapshot_date")
                .values(1, "TestOrg", "2023-01-01")
                .build()
        );

        assertNotNull(result);

        ValidatableResponse response = given()
            .queryParam("organization", "TestOrg")
            .queryParam("snapshot", "2023-12-31")
        .when()
            .get(baseUrlOfSut + "/statistics")
        .then()
            .statusCode(200)
            .body("[0].snapshotDate", equalTo("2023-01-01"));
    }

    @Test
    public void testGetEarliestSnapshotDate_NoResults() {
        ValidatableResponse response = given()
            .queryParam("organization", "TestOrg")
        .when()
            .get(baseUrlOfSut + "/statistics")
        .then()
            .statusCode(200)
            .body("size()", equalTo(0)); // No statistics expected for this input
    }

    @Test
    public void testGetEarliestSnapshotDate_WithResult() throws Exception {
        // Insert data into the database
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date earliestDate = sdf.parse("2022-01-01");

        InsertionResultsDto result = controller.insertIntoDatabase(
            sql()
                .insertInto("STATISTICS")
                .columns("id", "organization_name", "snapshot_date")
                .values(1, "TestOrg", "2022-01-01")
                .build()
        );

        assertNotNull(result);

        ValidatableResponse response = given()
            .queryParam("organization", "TestOrg")
        .when()
            .get(baseUrlOfSut + "/statistics")
        .then()
            .statusCode(200)
            .body("[0].snapshotDate", equalTo("2022-01-01"));
    }

    @Test
    public void testGetEarliestSnapshotDate_EmptyTable() {
        // No records in the statistics table
        ValidatableResponse response = given()
            .queryParam("organization", "NonExistentOrg")
        .when()
            .get(baseUrlOfSut + "/statistics")
        .then()
            .statusCode(200)
            .body("size()", equalTo(0)); // Expect no records for non-existent organization
    }
}

*****
