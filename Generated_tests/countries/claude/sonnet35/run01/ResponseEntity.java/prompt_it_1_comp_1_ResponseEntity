Do create a white box test suite in JUnit 4 and Java 8 using REST Assured to achieve full test coverage, including methods, lines, and all branches with all possible execution paths, according to the instructions delimited by %%%%%, which is part of the REST Java Application code delimited by *****. Use the Swagger documentation delimited by ##### to provide complementary information about the application. If an uncovered line is related to the <init> method (constructor), generate a test case that explicitly instantiates the class to ensure the constructor is executed. Your responses must contain only Java code in JUnit 4 format.

Follow these five instructions for this generated test code:

Instruction 1: Add this package line to generated test code file:
package eu.fayder.restcountries;

Instruction 2: Add the following Java imports to generated test code file:
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;

Instruction 3. Class Declaration: Create the class with the following declaration: sonnet35_run01_ResponseEntityTest

Instruction 4: Create these variables in the generated test code:
private static final SutHandler controller = new em.embedded.eu.fayder.EmbeddedEvoMasterController();
private static String baseUrlOfSut;

Instruction 5: Include the following setup and teardown methods in generated test code file:
@BeforeClass
public static void initClass() {
    controller.setupForGeneratedTest();
    baseUrlOfSut = controller.startSut();
    controller.registerOrExecuteInitSqlCommandsIfNeeded();
    assertNotNull(baseUrlOfSut);
    RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
    RestAssured.useRelaxedHTTPSValidation();
    RestAssured.urlEncodingEnabled = false;
    RestAssured.config = RestAssured.config()
        .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
        .redirect(redirectConfig().followRedirects(false));
}


@AfterClass
public static void tearDown() {
    controller.stopSut();
}


@Before
public void initTest() {
    controller.resetStateOfSUT();
}

%%%%%
Class name: eu/fayder/restcountries/domain/ResponseEntity
Method: getMessage
Lines: 17

Class name: eu/fayder/restcountries/domain/ResponseEntity
Method: getStatus
Lines: 21
%%%%%
*****
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
package eu.fayder.restcountries.domain;

public class ResponseEntity {
	
	private final int status;
	private final String message;
	
	public ResponseEntity(int status, String message) {
		this.status = status;
		this.message = message;
	}

	public String getMessage() {
		return message;
	}

	public int getStatus() {
		return status;
	}

}

*****
#####
openapi: 3.0.0
servers:
  - url: 'http://localhost:8080/rest'
info:
  description: 'REST countries API'
  title: REST countries API
  version: v2.0.5
paths:
  /v1/all:
    get:
      operationId: v1All
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v1/alpha/{alphacode}:
    get:
      operationId: v1Alphacode
      parameters:
        - name: alphacode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v1/alpha:
    get:
      operationId: v1Alphacodes
      parameters:
        - name: codes
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v1/currency/{currency}:
    get:
      operationId: v1Currency
      parameters:
        - name: currency
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v1/name/{name}:
    get:
      operationId: v1Name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fullText
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v1/callingcode/{callingcode}:
    get:
      operationId: v1Callingcode
      parameters:
        - name: callingcode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v1/capital/{capital}:
    get:
      operationId: v1Capital
      parameters:
        - name: capital
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v1/region/{region}:
    get:
      operationId: v1Region
      parameters:
        - name: region
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v1/subregion/{subregion}:
    get:
      operationId: v1Subregion
      parameters:
        - name: subregion
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v1/lang/{lang}:
    get:
      operationId: v1Lang
      parameters:
        - name: lang
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/all:
    get:
      operationId: v2All
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/alpha/{alphacode}:
    get:
      operationId: v2Alphacode
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: alphacode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/alpha:
    get:
      operationId: v2Alphacodes
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: codes
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/currency/{currency}:
    get:
      operationId: v2Currency
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: currency
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/name/{name}:
    get:
      operationId: v2Name
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fullText
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/callingcode/{callingcode}:
    get:
      operationId: v2Callingcode
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: callingcode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/capital/{capital}:
    get:
      operationId: v2Capital
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: capital
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/region/{region}:
    get:
      operationId: v2Region
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: region
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/subregion/{subregion}:
    get:
      operationId: v2Subregion
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: subregion
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/lang/{lang}:
    get:
      operationId: v2Lang
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: lang
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/demonym/{demonym}:
    get:
      operationId: v2Demonym
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: demonym
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
  /v2/regionalbloc/{regionalbloc}:
    get:
      operationId: v2Regionalbloc
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
        - name: regionalbloc
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        default:
          description: Other responses
components:
  schemas: { }
#####
