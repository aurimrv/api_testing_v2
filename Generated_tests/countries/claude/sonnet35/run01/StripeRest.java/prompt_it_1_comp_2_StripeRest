You are a highly skilled test engineer specializing in debugging and resolving compilation errors and test failures in Java-based projects. Your expertise includes Java 8, JUnit 4, and REST Assured, allowing you to diagnose issues efficiently and provide precise, actionable fixes.

Do fix the compilation errors delimited by ##### given the code below delimited by *****.

The response must contain only Java code in JUnit 4 format.

#####
[[1;31mERROR[m] COMPILATION ERROR : 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/restcountries/src/test/java/eu/fayder/restcountries/sonnet35_run01_StripeRestTest.java:[58,9] cannot find symbol
  symbol:   class StripeRest
  location: class eu.fayder.restcountries.sonnet35_run01_StripeRestTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/restcountries/src/test/java/eu/fayder/restcountries/sonnet35_run01_StripeRestTest.java:[58,37] cannot find symbol
  symbol:   class StripeRest
  location: class eu.fayder.restcountries.sonnet35_run01_StripeRestTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/restcountries/src/test/java/eu/fayder/restcountries/sonnet35_run01_StripeRestTest.java:[126,9] cannot find symbol
  symbol:   class StripeRest
  location: class eu.fayder.restcountries.sonnet35_run01_StripeRestTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/restcountries/src/test/java/eu/fayder/restcountries/sonnet35_run01_StripeRestTest.java:[126,37] cannot find symbol
  symbol:   class StripeRest
  location: class eu.fayder.restcountries.sonnet35_run01_StripeRestTest
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-compiler-plugin:3.8.0:testCompile[m [1m(default-testCompile)[m on project [36mrestcountries[m: [1;31mCompilation failure[m: Compilation failure: 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/restcountries/src/test/java/eu/fayder/restcountries/sonnet35_run01_StripeRestTest.java:[58,9] cannot find symbol
[[1;31mERROR[m]   symbol:   class StripeRest
[[1;31mERROR[m]   location: class eu.fayder.restcountries.sonnet35_run01_StripeRestTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/restcountries/src/test/java/eu/fayder/restcountries/sonnet35_run01_StripeRestTest.java:[58,37] cannot find symbol
[[1;31mERROR[m]   symbol:   class StripeRest
[[1;31mERROR[m]   location: class eu.fayder.restcountries.sonnet35_run01_StripeRestTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/restcountries/src/test/java/eu/fayder/restcountries/sonnet35_run01_StripeRestTest.java:[126,9] cannot find symbol
[[1;31mERROR[m]   symbol:   class StripeRest
[[1;31mERROR[m]   location: class eu.fayder.restcountries.sonnet35_run01_StripeRestTest
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_8_maven/cs/rest/original/restcountries/src/test/java/eu/fayder/restcountries/sonnet35_run01_StripeRestTest.java:[126,37] cannot find symbol
[[1;31mERROR[m]   symbol:   class StripeRest
[[1;31mERROR[m]   location: class eu.fayder.restcountries.sonnet35_run01_StripeRestTest
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

#####
*****
package eu.fayder.restcountries;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Map;
import java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import org.evomaster.client.java.controller.SutHandler;
import io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import io.restassured.config.JsonConfig;
import io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import org.evomaster.client.java.controller.expect.ExpectationHandler;
import io.restassured.path.json.JsonPath;
import java.util.Arrays;

public class sonnet35_run01_StripeRestTest {

    private static final SutHandler controller = new em.embedded.eu.fayder.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;

    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }

    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }

    @Test
    public void testIsBlank() {
        StripeRest stripeRest = new StripeRest();
        assertTrue(stripeRest.isBlank(null));
        assertTrue(stripeRest.isBlank(""));
        assertTrue(stripeRest.isBlank("  "));
        assertFalse(stripeRest.isBlank("test"));
    }

    @Test
    public void testContributeNullContribution() {
        given()
            .contentType("application/json;charset=utf-8")
            .body((Object) null)
        .when()
            .post(baseUrlOfSut + "/contribute")
        .then()
            .statusCode(400);
    }

    @Test
    public void testContributeNullToken() {
        given()
            .contentType("application/json;charset=utf-8")
            .body("{\"token\": null, \"amount\": 1000}")
        .when()
            .post(baseUrlOfSut + "/contribute")
        .then()
            .statusCode(400);
    }

    @Test
    public void testContributeEmptyToken() {
        given()
            .contentType("application/json;charset=utf-8")
            .body("{\"token\": \"\", \"amount\": 1000}")
        .when()
            .post(baseUrlOfSut + "/contribute")
        .then()
            .statusCode(400);
    }

    @Test
    public void testContributeValidToken() {
        // This test assumes that the Stripe API key is set to an empty string in the code
        // In a real scenario, you'd need to mock the Stripe API calls
        given()
            .contentType("application/json;charset=utf-8")
            .body("{\"token\": \"valid_token\", \"amount\": 1000}")
        .when()
            .post(baseUrlOfSut + "/contribute")
        .then()
            .statusCode(400); // Expecting 400 due to invalid Stripe API key
    }

    @Test
    public void testContributeStripeException() {
        // This test assumes that the Stripe API key is set to an empty string in the code
        // which will cause an AuthenticationException
        given()
            .contentType("application/json;charset=utf-8")
            .body("{\"token\": \"exception_token\", \"amount\": 1000}")
        .when()
            .post(baseUrlOfSut + "/contribute")
        .then()
            .statusCode(400);
    }

    @Test
    public void testGetResponse() {
        StripeRest stripeRest = new StripeRest();
        javax.ws.rs.core.Response response = stripeRest.getResponse(javax.ws.rs.core.Response.Status.ACCEPTED);
        assertEquals(202, response.getStatus());
        String entity = (String) response.getEntity();
        assertTrue(entity.contains("202"));
        assertTrue(entity.contains("Accepted"));
    }
}

*****
