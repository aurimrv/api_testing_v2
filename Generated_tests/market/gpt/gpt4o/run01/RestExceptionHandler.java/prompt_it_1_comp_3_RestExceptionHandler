You are a highly skilled test engineer specializing in debugging and resolving compilation errors and test failures in Java-based projects. Your expertise includes Java 11, JUnit 5, and REST Assured, allowing you to diagnose issues efficiently and provide precise, actionable fixes.

Do fix the compilation errors delimited by ##### given the code below delimited by *****.

The response must contain only Java code in JUnit 5 format.

#####
[[1;31mERROR[m] COMPILATION ERROR : 
[[1;31mERROR[m] /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/src/test/java/market/gpt4o_run01_RestExceptionHandlerTest.java:[16,26] cannot find symbol
  symbol:   class SutHandler
  location: class market.gpt4o_run01_RestExceptionHandlerTest
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-compiler-plugin:3.8.0:testCompile[m [1m(default-testCompile)[m on project [36mmarket-rest[m: [1;31mCompilation failure[m
[[1;31mERROR[m] [1;31m/media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/src/test/java/market/gpt4o_run01_RestExceptionHandlerTest.java:[16,26] cannot find symbol[m
[[1;31mERROR[m] [1;31m  symbol:   class SutHandler[m
[[1;31mERROR[m] [1;31m  location: class market.gpt4o_run01_RestExceptionHandlerTest[m
[[1;31mERROR[m] [1;31m[m
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

#####
*****

package market;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;
import org.springframework.validation.FieldError;
import org.springframework.context.MessageSource;

public class gpt4o_run01_RestExceptionHandlerTest {

    private static final SutHandler controller = new em.embedded.market.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("USER_ROLE", "CUSTOMER_ORDER", "CART_ITEM", "PRODUCT", "CART", "CONTACTS"));
        controller.resetStateOfSUT();
    }

    @Test
    @Timeout(10)
    public void testResolveErrorMessageWithValidFieldError() {
        FieldError fieldError = new FieldError("objectName", "fieldName", "defaultMessage");
        fieldError.setCodes(new String[] { "errorCode1", "errorCode2" });

        MessageSource messageSource = (code, args, locale) -> "LocalizedMessage";
        RestExceptionHandler handler = new RestExceptionHandler(messageSource);

        String result = handler.resolveErrorMessage(fieldError);

        assertEquals("LocalizedMessage", result);
    }

    @Test
    @Timeout(10)
    public void testResolveErrorMessageWithDefaultMessageFallback() {
        FieldError fieldError = new FieldError("objectName", "fieldName", "defaultMessage");

        MessageSource messageSource = (code, args, locale) -> "defaultMessage";
        RestExceptionHandler handler = new RestExceptionHandler(messageSource);

        String result = handler.resolveErrorMessage(fieldError);

        assertEquals("defaultMessage", result);
    }

    @Test
    @Timeout(10)
    public void testResolveErrorMessageWithFirstErrorCodeWhenMessagesMatch() {
        FieldError fieldError = new FieldError("objectName", "fieldName", "defaultMessage");
        fieldError.setCodes(new String[] { "errorCode1", "errorCode2" });

        MessageSource messageSource = (code, args, locale) -> "defaultMessage";
        RestExceptionHandler handler = new RestExceptionHandler(messageSource);

        String result = handler.resolveErrorMessage(fieldError);

        assertEquals("errorCode1", result);
    }

    @Test
    @Timeout(10)
    public void testConstructorInvocation() {
        MessageSource mockMessageSource = (code, args, locale) -> code;
        RestExceptionHandler handler = new RestExceptionHandler(mockMessageSource);

        assertNotNull(handler);
    }
}

*****
